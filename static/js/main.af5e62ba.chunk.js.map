{"version":3,"sources":["firebase.js","TvShowDetails.js","AddToListButton.js","GeneralSearch.js","AddListToFirebase.js","StoreState.js","NewListPage.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","TvShowDetails","state","tv","axios","url","this","props","match","params","tvShowsID","method","then","response","data","officialDescription","summary","replace","genreName","genres","officialRating","rating","average","officialNetwork","network","name","officialCountry","country","officialImage","image","medium","setState","className","src","alt","to","path","Component","AddToListButton","GeneralSearch","shuffle","a","i","length","j","Math","floor","random","sortedTV","topTen","comedyTen","hboShows","foodShows","shuffleTV","marginLeft","get","console","log","sort","b","reverse","slice","filter","show","searchArray","map","key","id","externals","tvrage","title","component","AddListToFirebase","tvShows","userInput","list","info","onClick","database","ref","child","remove","shows","listKey","dbRef","prevListCopy","dataToPush","on","prevList","val","push","update","StoreState","addNewList","newList","owner","addListToFirebase","handleChange","e","target","value","handleFormSubmit","preventDefault","action","onSubmit","htmlFor","type","onChange","handleClick","NewListPage","placeholder","class","App","addTvShow","newState","listInfo","keys","basename","exact","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.af5e62ba.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBb-jxZSNnD8SAtk2Iya1XGO61J7mA38Bg\",\n    authDomain: \"tv-show-superlatives-database.firebaseapp.com\",\n    databaseURL: \"https://tv-show-superlatives-database.firebaseio.com\",\n    projectId: \"tv-show-superlatives-database\",\n    storageBucket: \"tv-show-superlatives-database.appspot.com\",\n    messagingSenderId: \"1029143500760\",\n    appId: \"1:1029143500760:web:b168a46fad4f73e49a44ad\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tLink,\n\tNavLink\n} from \"react-router-dom\";\n\n\nclass TvShowDetails extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttv: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\taxios({\n\t\t\turl: `https://api.tvmaze.com/lookup/shows?tvrage=${this.props.match.params.tvShowsID}`,\n\t\t\tmethod: \"GET\"\n\t\t}).then(response => {\n\t\t\tconst tv = response.data;\n\t\t\tconst regex = /(<([^>]+)>)/gi;\n\t\t\tconst officialDescription = response.data.summary.replace(regex, \"\");\n\t\t\tconst genreName = response.data.genres[0];\n\t\t\tconst officialRating = response.data.rating.average;\n\t\t\tconst officialNetwork = response.data.network.name;\n\t\t\tconst officialCountry = response.data.network.country.name;\n\t\t\tconst officialImage = response.data.image.medium;\n\n\t\t\tthis.setState({\n\t\t\t\ttv: tv,\n\t\t\t\tofficialDescription: officialDescription,\n\t\t\t\tgenreName: genreName,\n\t\t\t\tofficialRating: officialRating,\n\t\t\t\tofficialNetwork: officialNetwork,\n\t\t\t\tofficialCountry: officialCountry,\n\t\t\t\tofficialImage: officialImage,\n\t\t\t});\n\t\t});\n\t}\n\n\t\n\t// /when component is true, show title, image, description, rating, network, country, genre, close button\n\trender() {\n\t\tif (\n\t\t\tthis.state.officialNetwork === \"\" ||\n\t\t\tthis.state.officialCountry === \"\"\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<div className=\"single-show\">\n\t\t\t\t\t<h1>{this.state.tv.name}</h1>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={this.state.officialImage}\n\t\t\t\t\t\talt={`A poster of ${this.state.tv.name}`}\n\t\t\t\t\t/>\n\t\t\t\t\t<p>Description: {this.state.officialDescription}</p>\n\t\t\t\t\t<p>Rating: {this.state.officialRating}/10</p>\n\t\t\t\t\t<p>Network unknown</p>\n\t\t\t\t\t<p>Country unknown</p>\n\t\t\t\t\t<p>Genre: {this.state.genreName}</p>\n\t\t\t\t\t<button>\n\t\t\t\t\t\t<Link to=\"/GeneralSearch/\">Close Window</Link>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"single-show\">\n\t\t\t\t\t\t<h1>{this.state.tv.name}</h1>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={this.state.officialImage}\n\t\t\t\t\t\t\talt={`A poster of ${this.state.tv.name}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p>Description: {this.state.officialDescription}</p>\n\t\t\t\t\t\t<p>Rating: {this.state.officialRating}/10</p>\n\t\t\t\t\t\t<p>Network: {this.state.officialNetwork}</p>\n\t\t\t\t\t\t<p>Country: {this.state.officialCountry}</p>\n\t\t\t\t\t\t<p>Genre: {this.state.genreName}</p>\n\t\t\t\t\t\t<button>\n\t\t\t\t\t\t\t<Route path=\"/addNewList:list\" />\n\t\t\t\t\t\t\tAdd To List\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button>\n\t\t\t\t\t\t\t<Link to=\"/GeneralSearch/\">Close Window</Link>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t}\n}\n\t\t\nexport default TvShowDetails;","import React, { Component } from 'react';\r\n\r\nclass AddToListButton extends Component {\r\n    render() {\r\n        return (\r\n            <button>add to list</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddToListButton;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport TvShowDetails from './TvShowDetails';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport AddToListButton from './AddToListButton'\n\n\nclass GeneralSearch extends Component {\n    constructor(){\n        super();\n        this.state = {\n            tv: [],\n            sortedTV: [],\n            topTen: [],\n            comedyTen: [],\n            hboShows: [],\n            foodShows: [],\n            shuffleTV: [],\n            marginLeft:0,\n        }\n    }\n    shuffle = (a) => {\n        for (let i = a.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [a[i], a[j]] = [a[j], a[i]];\n        }\n        return a;\n    }\n    componentDidMount() { \n        axios.get(`http://api.tvmaze.com/shows?page=2`).then(response => {\n                const tv = response.data;\n                    this.setState({\n                    tv: tv,\n                });\n                console.log(tv)\n                const sortedTV = tv.sort(function(a, b) {\n                    if (a.rating.average === null) {\n                        return false\n                    } else {\n                        return a.rating.average - b.rating.average;\n                    }\n                });\n                const topTen = sortedTV.reverse().slice(0,10);\n                this.setState({\n                    topTen: topTen,\n                })\n                const comedyTen = sortedTV.filter(show => {\n                    if (show.genres[0] === null) {\n                        return false \n                    } else if (show.genres[0] === \"Comedy\") {\n                        return show.genres[0]\n                }\n                }).slice(0,10)\n                this.setState({\n                    comedyTen: comedyTen,\n                })\n//////////////////userInput attachment to search field needs to be done\n            let userInput = \"France\"\n            const searchArray = tv.filter(show => {\n                if (show.network === null) {\n                    return false \n                } else if (show.network.name === userInput) {\n                    return show.network.name\n                }  else if (show.genres[0] === userInput) {\n                    return show.genres[0]\n                } else if (show.name === userInput) {\n                    return show.name\n                } else if (show.network.country.name === userInput) {\n                    return show.network.country.name\n                } \n            })\n            console.log(searchArray)\n\n            const hboShows = sortedTV.filter(show => {\n                if (show.network === null) {\n                    return false\n                } else if (show.network.name === \"HBO\") {\n                    return show.network.name\n                }\n            }).slice(0,10)\n            this.setState({\n                hboShows: hboShows,\n            });\n            const foodShows = sortedTV.filter(show => {\n                if (show.genres[0] === null) {\n                    return false\n                } else if (show.genres[0] === \"Food\") {\n                    return show.genres[0]\n                }\n            }).slice(0,10);\n            this.setState({\n                foodShows: foodShows,\n            });\n            const shuffleTV = this.shuffle(tv).reverse().slice(0,10);\n            this.setState({\n                shuffleTV: shuffleTV,\n            })\n            \n        });\n    \n    }\n\n\n//--------------------- HERE IS THE ARROW BUTTON SCROLLER CRAP------------------------------------//\n\n    \n    render() {\n        return (    \n        <div className=\"tv-catalogue\">\n            <h2>Best Rated Shows on TV</h2>\n            <div className=\"showScroll\">\n                {this.state.topTen.map(show => {\n                    return (\n                        <div key={show.id} className=\"tv-titles tv-poster\">\n                            <Link to={`/tvShows/${show.externals.tvrage}`}>\n                            <img src={`${show.image.medium}`} title={`${show.name}`} alt={`${show.name}`}/>\n                            </Link>\n                            <AddToListButton \n                                // key={this.key} \n                                // title={this.title}\n                            />\n                            <Router>\n                                <Route path=\"/tvShow/:tvShowID\" component={TvShowDetails}/>\n                            </Router>\n                        </div>\n                    )\n                })}\n            </div>\n            <h2>HBO</h2>\n            <div className=\"showScroll\">\n                {this.state.hboShows.map(show => {\n                    return (\n                        <div key={show.id} className=\"tv-titles tv-poster\">\n                            <Link to={`/tvShows/${show.externals.tvrage}`}>\n                            <img src={`${show.image.medium}`} title={`${show.name}`} alt={`${show.name}`}/>\n                            </Link>\n                            <AddToListButton />\n                            <Router>\n                                <Route path=\"/tvShow/:tvShowID\" component={TvShowDetails}/>\n                            </Router>\n                        </div>\n                    )\n                })}\n            </div>    \n            <h2>Comedy</h2>\n            <div className=\"showScroll\">\n                {this.state.comedyTen.map(show => {\n                    return (\n                        <div key={show.id} className=\"tv-titles tv-poster\">\n                            <Link to={`/tvShows/${show.externals.tvrage}`}>\n                            <img src={`${show.image.medium}`} title={`${show.name}`} alt={`${show.name}`}/>\n                            </Link>\n                            <AddToListButton />\n                            <Router>\n                                <Route path=\"/tvShow/:tvShowID\" component={TvShowDetails}/>\n                            </Router>\n                        </div>\n                    )\n                })}\n            </div>\n            <h2>Food shows</h2>\n            <div className=\"showScroll\">\n                {this.state.foodShows.map(show => {\n                    return (\n                        <div key={show.id} className=\"tv-titles tv-poster\">  \n                            <Link to={`/tvShows/${show.externals.tvrage}`}>\n                            <img src={`${show.image.medium}`} title={`${show.name}`} alt={`${show.name}`}/>\n                            </Link>\n                            <AddToListButton />\n                            <Router>\n                                <Route path=\"/tvShow/:tvShowID\" component={TvShowDetails}/>\n                            </Router>\n                        </div>\n                    )\n                })}\n            </div>\n            <h2>TV Show Roulette!</h2>\n            <div className=\"showScroll\">\n                {this.state.shuffleTV.map(show => {\n                    return (\n                        <div key={show.id} className=\"tv-titles tv-poster\">\n                            <Link to={`/tvShows/${show.externals.tvrage}`}>\n                            <img src={`${show.image.medium}`} title={`${show.name}`} alt={`${show.name}`}/>\n                            </Link>\n                            <AddToListButton />\n                            <Router>\n                                <Route path=\"/tvShow/:tvShowID\" component={TvShowDetails}/>\n                            </Router>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n        )\n    }\n}\nexport default GeneralSearch;\n  ","import React, { Component } from 'react';\r\nimport firebase from \"./firebase\"\r\n\r\nclass AddListToFirebase extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      tvShows:[],\r\n      userInput:'',\r\n      marginLeft:0\r\n    }\r\n  }\r\n\r\n    \r\n    render() {\r\n        return(\r\n          <div>\r\n            {\r\n              this.props.tvShows.reverse().map(list => {\r\n                return (\r\n                  <ul key={list.key}>{list.info.name}\r\n                  \r\n                  <button onClick={() => {\r\n                    const key = list.key\r\n                    console.log(key)\r\n                    const dbRef = firebase.database().ref().child(key + '/')\r\n                    dbRef.remove()\r\n                  }}>\r\n                    remove\r\n                  </button>\r\n\r\n                  {\r\n                    list.info.shows.map(show => {\r\n                      return <li key={show.key}>\r\n                        {show.name}\r\n                        <button onClick={() => {\r\n                          const key = show.key\r\n                          const listKey = list.key\r\n                          console.log(key)\r\n                          console.log(list.key)\r\n                          const dbRef = firebase.database().ref().child(listKey + '/shows/' + key + '/')\r\n                          console.log(dbRef.key)\r\n                          dbRef.remove()\r\n                        }}>remove</button>\r\n                        </li>\r\n                    })\r\n                  }\r\n                  <button onClick={() => {\r\n\r\n                    const key = list.key\r\n                    const dataToPush = {\r\n                      key: 1235,\r\n                      name: 'bhlegnl?'\r\n                    }\r\n                    let prevListCopy;\r\n                    const dbRef = firebase.database().ref().child(key + '/shows')\r\n\r\n                    dbRef.on('value', response => {\r\n                      const prevList = response.val();\r\n                      prevListCopy = [...prevList];\r\n                      prevListCopy.push(dataToPush);\r\n                    })\r\n                    \r\n                    dbRef.update(prevListCopy);\r\n                    \r\n\r\n                    }}>add to tv show</button>\r\n                </ul>\r\n                )\r\n              })\r\n            }\r\n\r\n          </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddListToFirebase","import React, { Component } from 'react';\nimport firebase from './firebase'\nimport './App.css';\nimport AddListToFirebase from './AddListToFirebase';\n\n\n\nclass StoreState extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            tvShows:[],\n            userInput:'',\n        }\n        \n    }\n\n    addNewList = (userInput) => {\n        const newList = {\n            owner: '',\n            name: userInput,\n            shows: [\n                {\n                    key: 12,\n                    name: \"\"\n                }\n            ]\n        };\n\n        const dbRef = firebase.database().ref();\n        dbRef.push(newList)\n    }\n    \n    addListToFirebase = (props) =>{\n        console.log(this.state.userInput)\n        //     return (\n        //         props.tvShows,\n        //         props.dummyData  //also tried props.dummy=this.props.dummyData  \n        // )\n    }\n\n    // search(term) {\n    //     this.setState({ term });\n    // }\n    \n\n    handleChange = (e) => {\n        this.setState({userInput:e.target.value})\n        // console.log(e.target.value)\n        \n    }\n    \n    \n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        this.addListToFirebase(this.state.userInput)\n        // console.log(this.handleFormSubmit, \"hello\")\n        const userInput = this.state.userInput\n        this.addNewList(userInput)\n        this.setState({\n            userInput:'',\n            // tvShows:[]\n        })\n    }\n\n    // componentDidMount() {\n    //     const dbRef=firebase.database().ref();\n    //     dbRef.on('value', (response) => {\n    //         console.log(response.val())\n    //     })\n    // }  \n    \n\n    // handleClick=(e)=>{\n    //     e.preventDefault();\n    //     // const dbRef = firebase.database().ref();\n    //     // dbRef.push(this.state.userInput);\n    //     this.setState({userInput:''})\n    //     console.log(\"clicked\")\n    // }\n\n        \n    render() {\n        // console.log(this.state.userInput)\n        return (\n            <div>\n                <form \n                className=\"searchForm\" action=\"submit\" onSubmit={this.handleFormSubmit}>\n                    <label htmlFor=\"showSearch\">new list title: </label>\n                    <input\n                        className=\"searchBar\"\n                        type=\"text\"\n                        id=\"showSearch\"\n                        onChange={this.handleChange}\n                        value={this.state.userInput}\n                    />\n                    <button type=\"submit\" onClick={this.handleClick}> + </button>\n                    {/* <AddListToFirebase \n                        type=\"submit\" \n                        onClick={this.handleClick}\n                        tvShows={this.state.tvShows}\n                        // dummyData={this.state.dummyData}\n                        addNewList={this.addNewList}\n                        onSubmit={this.handleFormSubmit}/> */}\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default StoreState;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tLink,\n\tNavLink\n} from \"react-router-dom\";\n\nclass NewListPage extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttv: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t// \taxios({\n\t// \t\turl: `https://api.tvmaze.com/lookup/shows?tvrage=${this.props.match.params.tvShowsID}`,\n\t// \t\tmethod: \"GET\"\n\t// \t}).then(response => {\n\t// \t\tconst tv = response.data;\n\t// \t\tconst regex = /(<([^>]+)>)/gi;\n\t// \t\tconst officialDescription = response.data.summary.replace(regex, \"\");\n\t// \t\tconst genreName = response.data.genres[0];\n\t// \t\tconst officialRating = response.data.rating.average;\n\t// \t\tconst officialNetwork = response.data.network.name;\n\t// \t\tconst officialCountry = response.data.network.country.name;\n\t// \t\tconst officialImage = response.data.image.medium;\n\n\t// \t\tthis.setState({\n\t// \t\t\ttv: tv,\n\t// \t\t\tofficialDescription: officialDescription,\n\t// \t\t\tgenreName: genreName,\n\t// \t\t\tofficialRating: officialRating,\n\t// \t\t\tofficialNetwork: officialNetwork,\n\t// \t\t\tofficialCountry: officialCountry,\n\t// \t\t\tofficialImage: officialImage\n\t// \t\t});\n\t// \t});\n\t}\n\n\trender() {\n        return (\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className=\"listPageFlex\">\n\t\t\t\t\t\t\t\t<h1>LOGO</h1>\n\t\t\t\t\t\t\t\t<button className=\"listButton\">cancel</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"listPageFlex\">\n\t\t\t\t\t\t\t\t<h2>New List</h2>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"listPageFlex2\">\n\t\t\t\t\t\t\t\t<h3>List Name</h3>\n\t\t\t\t\t\t\t\t<button className=\"listButton\">Add to list</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"listPageFlex3\">\n\t\t\t\t\t\t\t\t<div className=\"listPageFlex4\">\n\t\t\t\t\t\t\t\t\t<div className=\"listPageFlex\">\n\t\t\t\t\t\t\t\t\t\t<h3>User's List Items</h3>\n\t\t\t\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"searchForm\"\n\t\t\t\t\t\t\t\t\t\t\taction=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tonSubmit={this.handleFormSubmit}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"listSearch\"></label>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"listSearchBar\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"listSearch\"\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.userInput}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"search for a show\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"listButton\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fas fa-search\"></i>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"listVsChoicesFlex\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"userList\">\n\t\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={this.state.officialImage}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`A poster of ${this.state.tv.name}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={this.state.officialImage}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`A poster of ${this.state.tv.name}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={this.state.officialImage}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`A poster of ${this.state.tv.name}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={this.state.officialImage}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`A poster of ${this.state.tv.name}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={this.state.officialImage}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`A poster of ${this.state.tv.name}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={this.state.officialImage}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`A poster of ${this.state.tv.name}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"userOptions\">\n\t\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={this.state.officialImage}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`A poster of ${this.state.tv.name}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={this.state.officialImage}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`A poster of ${this.state.tv.name}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={this.state.officialImage}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`A poster of ${this.state.tv.name}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={this.state.officialImage}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`A poster of ${this.state.tv.name}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={this.state.officialImage}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`A poster of ${this.state.tv.name}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={this.state.officialImage}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`A poster of ${this.state.tv.name}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Router>\n\t\t\t\t);\n    \n\n\n\t// \tif (\n\t// \t\tthis.state.officialNetwork === \"\" ||\n\t// \t\tthis.state.officialCountry === \"\"\n\t// \t) {\n\t// \t\treturn (\n\t// \t\t\t<div className=\"single-show\">\n\t// \t\t\t\t<h1>{this.state.tv.name}</h1>\n\t// \t\t\t\t<img\n\t// \t\t\t\t\tsrc={this.state.officialImage}\n\t// \t\t\t\t\talt={`A poster of ${this.state.tv.name}`}\n\t// \t\t\t\t/>\n\t// \t\t\t\t<p>Description: {this.state.officialDescription}</p>\n\t// \t\t\t\t<p>Rating: {this.state.officialRating}/10</p>\n\t// \t\t\t\t<p>Network unknown</p>\n\t// \t\t\t\t<p>Country unknown</p>\n\t// \t\t\t\t<p>Genre: {this.state.genreName}</p>\n\t// \t\t\t\t<button>\n\t// \t\t\t\t\t<Link to=\"/GeneralSearch/\">Close Window</Link>\n\t// \t\t\t\t</button>\n\t// \t\t\t</div>\n\t// \t\t);\n\t// \t} else {\n\t// \t\treturn (\n\t// \t\t\t<div className=\"single-show\">\n\t// \t\t\t\t<h1>{this.state.tv.name}</h1>\n\t// \t\t\t\t<img\n\t// \t\t\t\t\tsrc={this.state.officialImage}\n\t// \t\t\t\t\talt={`A poster of ${this.state.tv.name}`}\n\t// \t\t\t\t/>\n\t// \t\t\t\t<p>Description: {this.state.officialDescription}</p>\n\t// \t\t\t\t<p>Rating: {this.state.officialRating}/10</p>\n\t// \t\t\t\t<p>Network: {this.state.officialNetwork}</p>\n\t// \t\t\t\t<p>Country: {this.state.officialCountry}</p>\n\t// \t\t\t\t<p>Genre: {this.state.genreName}</p>\n\t// \t\t\t\t<button>\n\t// \t\t\t\t\t<Link to=\"/GeneralSearch/\">Close Window</Link>\n\t// \t\t\t\t</button>\n\t// \t\t\t</div>\n\t// \t\t);\n\t// \t}\n\t// }\n    }\n}\n\nexport default NewListPage;\n","import React, { Component } from 'react';\nimport firebase from './firebase';\nimport TvShowDetails from './TvShowDetails';\nimport GeneralSearch from './GeneralSearch';\nimport StoreState from './StoreState';\nimport { BrowserRouter as Router, Route, Link, NavLink } from 'react-router-dom';\nimport AddListToFirebase from './AddListToFirebase'\nimport '../src/index.css'\nimport NewListPage from './NewListPage';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state={\n      tvShows:[],\n      userInput:'',\n      list: [],\n    }\n  }\n\n  componentDidMount() {\n    const dbRef = firebase.database().ref();\n    dbRef.on('value', response => {\n      const newState = [];\n      const newList = [];\n      const data = response.val();\n\n\n      for (let key in data) {\n        const listInfo = {\n          key: key,\n          info: data[key]\n        }\n        console.log(listInfo.key, listInfo)\n        const keys = key\n        const listArray = data[key]\n        newState.push(listInfo)\n        newList.push(keys)\n        // console.log(data.key)\n        this.setState({\n          tvShows: newState,\n          list: newList\n        })\n      }\n    })\n  }\n\n    \n  handleClick = (e) => {\n    e.preventDefault();\n    // const dbRef = firebase.database().ref();\n    // dbRef.push(this.state.userInput);\n    this.setState({ userInput: '' })\n    console.log(\"clicked\")\n  }\n\n  \n  addTvShow = (e) => {\n    e.preventDefault()\n    const addTvShow = {\n      shows: [\n        {\n          name: 'a new show?',\n          key: 302\n        }\n      ]\n    };\n\n\n    const dbRef = firebase.database().ref();\n    // console.log(this)\n    // console.log(dbRef.val)\n    // dbRef.push(addTvShow)\n  };\n\n  render() {\n    return (\n\t\t\t<Router basename=\"/tv-show-superlatives/\">\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<h1>Welcome</h1>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Link to=\"/\">Home</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Link to=\"/GeneralSearch/\">General Search</Link>\n\t\t\t\t\t\t\t\t<Route path=\"/GeneralSearch/\" component={GeneralSearch} />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Link to=\"/NewListPage/\">New List</Link>\n\t\t\t\t\t\t\t\t<Route path=\"/NewListPage/\" component={NewListPage} />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{/* <Link to=\"/StoreState/\">Store State</Link> */}\n\t\t\t\t\t\t\t\t<Route path=\"/StoreState/\" component={StoreState} />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{/* <Link to=\"/TvShowDetails/\">TV Show Details</Link> */}\n\t\t\t\t\t\t\t\t<Route path=\"/tvShows/:tvShowsID\" component={TvShowDetails} />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t\t\t<AddListToFirebase\n\t\t\t\t\t\t\t\t\t\t\thandleClick={this.handleClick}\n\t\t\t\t\t\t\t\t\t\t\ttvShows={this.state.tvShows}\n\t\t\t\t\t\t\t\t\t\t\tlist={this.state.list}\n\t\t\t\t\t\t\t\t\t\t\t// dummyData={this.dummyData}\n\t\t\t\t\t\t\t\t\t\t\taddTvShow={this.addTvShow}\n\t\t\t\t\t\t\t\t\t\t\taddNewList={this.addNewList}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}