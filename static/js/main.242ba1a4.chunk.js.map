{"version":3,"sources":["firebase.js","AddToListButton.js","TvShowDetails.js","AddListToFirebase.js","GeneralSearch.js","UpVote.js","NewListPage.js","Nav.js","NewListFirebase.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","AddToListButton","handleClick","dbRef","database","ref","props","newListPage","showToAdd","name","showName","key","showId","undefined","currentListObj","shows","push","set","onClick","this","className","Component","TvShowDetails","state","tv","axios","url","match","params","tvShowsID","method","then","response","data","officialDescription","summary","replace","genreName","genres","officialRating","rating","average","officialImage","image","medium","setState","console","log","network","src","alt","title","country","to","AddListToFirebase","tvShows","userInput","marginLeft","tvShowsCopy","action","onSubmit","handleFormSubmit","htmlFor","type","id","onChange","handleChange","value","placeholder","class","reverse","map","list","info","filter","show","index","showListCopy","listKey","child","on","showList","splice","prevListCopy","dataToPush","prevList","val","update","GeneralSearch","shuffle","a","i","length","j","Math","floor","random","sortedTV","topTen","comedyTen","hboShows","dramaShows","shuffleTV","get","sort","b","slice","externals","tvrage","path","component","UpVote","handleClickUpVote","count","NewListPage","e","target","preventDefault","userTV","objectArray","objectToPush","stateToSet","upVoteArray","userSearchQuery","searchedShows","hello","newListStateObj","Nav","tabIndex","exact","render","NewListFirebase","App","addNewList","newList","owner","newListPageObj","page","newState","listInfo","keys","basename","addTvShow","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.242ba1a4.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBb-jxZSNnD8SAtk2Iya1XGO61J7mA38Bg\",\n    authDomain: \"tv-show-superlatives-database.firebaseapp.com\",\n    databaseURL: \"https://tv-show-superlatives-database.firebaseio.com\",\n    projectId: \"tv-show-superlatives-database\",\n    storageBucket: \"tv-show-superlatives-database.appspot.com\",\n    messagingSenderId: \"1029143500760\",\n    appId: \"1:1029143500760:web:b168a46fad4f73e49a44ad\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\n\r\nclass AddToListButton extends Component {\r\n    handleClick = () => {\r\n        const dbRef = firebase.database().ref(this.props.newListPage);\r\n        const showToAdd = {\r\n            name: this.props.showName,\r\n            key: this.props.showId,\r\n        }\r\n        if (this.props.currentListObj.shows === undefined) {\r\n            this.props.currentListObj.shows = []\r\n            this.props.currentListObj.shows.push(showToAdd)\r\n            dbRef.set(this.props.currentListObj)\r\n        } else {\r\n            this.props.currentListObj.shows.push(showToAdd)\r\n            dbRef.set(this.props.currentListObj)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button \r\n            onClick={this.handleClick}\r\n            className=\"addToList\">\r\n                add to list\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddToListButton;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport AddToListButton from './AddToListButton'\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tLink,\n\tNavLink\n} from \"react-router-dom\";\n\n\nclass TvShowDetails extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttv: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\taxios({\n\t\t\turl: `https://api.tvmaze.com/lookup/shows?language=English&tvrage=${this.props.match.params.tvShowsID}`,\n\t\t\tmethod: \"GET\"\n\t\t}).then(response => {\n\t\t\tconst tv = response.data;\n\t\t\tconst regex = /(<([^>]+)>)/gi;\n\t\t\tconst officialDescription = response.data.summary.replace(regex, \"\");\n\t\t\tconst genreName = response.data.genres[0];\n\t\t\tconst officialRating = response.data.rating.average;\n\t\t\tconst officialImage = response.data.image.medium;\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\ttv: tv,\n\t\t\t\tofficialDescription: officialDescription,\n\t\t\t\tgenreName: genreName,\n\t\t\t\tofficialRating: officialRating,\n\t\t\t\tofficialImage: officialImage,\n\t\t\t});\n\t\t});\n\t}\n\t\n\trender() {\n\t\tconsole.log(this.state.tv.network)\n\t\treturn (\n\t\t\t<div className=\"singleShow\">\n\t\t\t\t<h2 className=\"showName\">\n\t\t\t\t\t{this.state.tv.name == null || undefined ? (\n\t\t\t\t\t\t<p>N/A</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tthis.state.tv.name\n\t\t\t\t\t)}\n\t\t\t\t</h2>\n\t\t\t\t{this.state.officialImage == null || undefined ? (\n\t\t\t\t\t<p>N/A</p>\n\t\t\t\t) : (\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={this.state.officialImage}\n\t\t\t\t\t\talt={`A poster of ${this.state.tv.name}`}\n\t\t\t\t\t\ttitle={`${this.state.tv.name}`}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<p>\n\t\t\t\t\t<span className=\"bolded\">Description: </span>\n\t\t\t\t\t{this.state.officialDescription == null || undefined ? (\n\t\t\t\t\t\t<p>N/A</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tthis.state.officialDescription\n\t\t\t\t\t)}\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<span className=\"bolded\">Rating: </span>\n\t\t\t\t\t{this.state.officialRating == null || undefined ? (\n\t\t\t\t\t\t<p>N/A</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tthis.state.officialRating\n\t\t\t\t\t)}\n\t\t\t\t\t/10\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<span className=\"bolded\">Network: </span>\n\t\t\t\t\t{this.state.tv.network == null || undefined ? (\n\t\t\t\t\t\t<p>N/A</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tthis.state.tv.network.name\n\t\t\t\t\t)}\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<span className=\"bolded\">Country: </span>\n\t\t\t\t\t{this.state.tv.network == null || undefined ? (\n\t\t\t\t\t\t<p>N/A</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tthis.state.tv.network.country.name\n\t\t\t\t\t)}\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<span className=\"bolded\">Genre: </span>\n\t\t\t\t\t{this.state.genreName == null || undefined ? (\n\t\t\t\t\t\t<p>N/A</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tthis.state.genreName\n\t\t\t\t\t)}\n\t\t\t\t</p>\n\t\t\t\t<div className=\"buttonFlex\">\n\t\t\t\t\t{/* <AddToListButton /> */}\n\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t<button className=\"detailsButton\">New List</button>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to=\"/GeneralSearch/\">\n\t\t\t\t\t\t<button className=\"detailsButton\">Catalogue</button>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to=\"/NewListPage/\">\n\t\t\t\t\t\t<button className=\"detailsButton\">Your List</button>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TvShowDetails;","import React, { Component } from 'react';\r\nimport firebase from \"./firebase\";\r\nimport { BrowserRouter as Router, Route, Link, NavLink, Switch, Redirect } from 'react-router-dom';\r\n\r\n\r\nclass AddListToFirebase extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      tvShows:[],\r\n      userInput:'',\r\n      marginLeft:0\r\n    }\r\n  }\r\n\r\n    \r\n    render() {\r\n\r\n        const tvShows = this.props.tvShows;\r\n        const tvShowsCopy = [...tvShows]\r\n      \r\n        return(\r\n          <div>\r\n            {\r\n              <Switch>\r\n                <div>\r\n                    <form \r\n                    className=\"searchForm\" action=\"submit\" onSubmit={this.props.handleFormSubmit}>\r\n                        <label htmlFor=\"showSearch\">new list title: </label>\r\n                        <input\r\n                            className=\"searchBar\"\r\n                            type=\"text\"\r\n                            id=\"showSearch\"\r\n                            onChange={this.props.handleChange}\r\n                            value={this.props.userInput}\r\n                            placeholder=\"Name your list!\"\r\n                        />\r\n                        <button className=\"addAList\" type=\"submit\">\r\n                          <i class=\"fas fa-plus\"></i>\r\n                        </button>\r\n\r\n                        {this.props.newListPage ? <Redirect to={`/newListPage/${this.props.newListPage}`} /> : null}\r\n                    </form>\r\n                </div>\r\n            </Switch>\r\n            }\r\n             {\r\n              tvShowsCopy.reverse().map(list => {\r\n                return (\r\n                  <ul key={list.key}>{list.info.name}\r\n                  {\r\n                    (list.info.shows !== undefined) &&\r\n                      \r\n                      list.info.shows.filter(show => show.name !== 'none').map((show, index) => {\r\n                        return <li key={show.key}>\r\n                          {show.name}\r\n                          <button onClick={() => {\r\n                            const listKey = list.key;\r\n                            let showListCopy;\r\n                            const dbRef = firebase.database().ref().child(listKey + '/shows/' + index + '/')\r\n                            \r\n                            \r\n                            dbRef.on('value', response => {\r\n                              // console.log(response.val())\r\n                              const showList = list.info.shows;\r\n                              showListCopy = [...showList];\r\n                              showListCopy.splice(index, 1)\r\n                            })\r\n                            // console.log(showListCopy)\r\n                            const otherDbRef = firebase.database().ref().child(listKey +   '/shows/')\r\n                            otherDbRef.set(showListCopy)\r\n                            \r\n                          }}>remove</button>\r\n                          </li>\r\n                      })\r\n                    }\r\n                  \r\n                  <button onClick={() => {\r\n                    const key = list.key\r\n                    const dataToPush = {\r\n                      key: 1235,\r\n                      name: 'bhlegnl?'\r\n                    }\r\n                    let prevListCopy;\r\n                    const dbRef = firebase.database().ref().child(key + '/shows')\r\n                    dbRef.on('value', response => {\r\n                      const prevList = response.val();\r\n                      prevListCopy = [...prevList];\r\n                      prevListCopy.push(dataToPush);\r\n                    })\r\n                    \r\n                    dbRef.update(prevListCopy);\r\n                    \r\n                    }}>add to list</button>\r\n                </ul>\r\n                )\r\n              })\r\n            }\r\n\r\n\r\n\r\n          </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddListToFirebase","import React, { Component } from 'react';\nimport axios from 'axios';\nimport TvShowDetails from './TvShowDetails';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport AddToListButton from './AddToListButton'\n\n\nclass GeneralSearch extends Component {\n    constructor(){\n        super();\n        this.state = {\n            tv: [],\n            sortedTV: [],\n            topTen: [],\n            comedyTen: [],\n            hboShows: [],\n            dramaShows: [],\n            shuffleTV: [],\n            marginLeft:0,\n        }\n        \n    }\n    shuffle = (a) => {\n        for (let i = a.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [a[i], a[j]] = [a[j], a[i]];\n        }\n        return a;\n    }\n\n    componentDidMount() { \n        axios.get(`https://api.tvmaze.com/shows?page=X`).then(response => {\n            const tv = response.data;\n                this.setState({\n                    tv: tv,\n            });\n            const sortedTV = tv.sort(function(a, b) {\n                if (a.rating.average === null) {\n                    return false\n                } else {\n                    return a.rating.average - b.rating.average;\n                }\n            });\n            const topTen = sortedTV.reverse().slice(0,15);\n                this.setState({\n                    topTen: topTen,\n            });\n            const comedyTen = sortedTV.filter(show => {\n                if (show.genres[0] === null) {\n                    return false \n                } else if (show.genres[0] === \"Comedy\") {\n                    return show.genres[0]\n                }\n            }).slice(0,15)\n                this.setState({\n                    comedyTen: comedyTen,\n            });\n            const hboShows = sortedTV.filter(show => {\n                if (show.network === null) {\n                    return false\n                } else if (show.network.name === \"HBO\") {\n                    return show.network.name\n                }\n            }).slice(0,15)\n            this.setState({\n                hboShows: hboShows,\n            });\n            const dramaShows = sortedTV.filter(show => {\n                if (show.genres[0] === null) {\n                    return false\n                } else if (show.genres[0] === \"Drama\") {\n                    return show.genres[0]\n                }\n            }).slice(0,10);\n            this.setState({\n                dramaShows: dramaShows,\n            });\n            const shuffleTV = this.shuffle(tv).reverse().slice(0,10);\n            this.setState({\n                shuffleTV: shuffleTV,\n            });\n        });\n    }\n\n    render() {\n        return (    \n            <div className=\"tvCatalogue\">\n                <h2>Best Rated Shows on TV</h2>\n                <div className=\"showScroll\">\n                    {this.state.topTen.map(show => {\n                        return (\n                            <div key={show.id} className=\"tvTitles\">\n                                <Link to={`/tvShows/${show.externals.tvrage}`}>\n                                <img src={`${show.image.medium}`} title={`${show.name}`} alt={`${show.name}`}/>\n                                </Link>\n                                <Link to={`/tvShows/${show.externals.tvrage}`}>\n                                <button className=\"addToList\">More Details</button>\n                                </Link>\n                                {/* <AddToListButton /> */}\n                                <Router>\n                                    <Route path=\"/tvShow/:tvShowID\" component={TvShowDetails}/>\n                                </Router>\n                            </div>\n                        )\n                    })}\n                </div>\n                <h2>HBO</h2>\n                <div className=\"showScroll\">\n                    {this.state.hboShows.map(show => {\n                        return (\n                            <div key={show.id} className=\"tvTitles\">\n                                <Link to={`/tvShows/${show.externals.tvrage}`}>\n                                <img src={`${show.image.medium}`} title={`${show.name}`} alt={`${show.name}`}/>\n                                </Link>\n                                <Link to={`/tvShows/${show.externals.tvrage}`}>\n                                <button className=\"addToList\">More Details</button>\n                                </Link>\n                                {/* <AddToListButton /> */}\n                                <Router>\n                                    <Route path=\"/tvShow/:tvShowID\" component={TvShowDetails}/>\n                                </Router>\n                            </div>\n                        )\n                    })}\n                </div>    \n                <h2>Comedy</h2>\n                <div className=\"showScroll\">\n                    {this.state.comedyTen.map(show => {\n                        return (\n                            <div key={show.id} className=\"tvTitles\">\n                                <Link to={`/tvShows/${show.externals.tvrage}`}>\n                                <img src={`${show.image.medium}`} title={`${show.name}`} alt={`${show.name}`}/>\n                                </Link>\n                                <Link to={`/tvShows/${show.externals.tvrage}`}>\n                                <button className=\"addToList\">More Details</button>\n                                </Link>\n                                {/* <AddToListButton /> */}\n                                <Router>\n                                    <Route path=\"/tvShow/:tvShowID\" component={TvShowDetails}/>\n                                </Router>\n                            </div>\n                        )\n                    })}\n                </div>\n                <h2>Dramas</h2>\n                <div className=\"showScroll\">\n                    {this.state.dramaShows.map(show => {\n                        return (\n                            <div key={show.id} className=\"tvTitles\">  \n                                <Link to={`/tvShows/${show.externals.tvrage}`}>\n                                <img src={`${show.image.medium}`} title={`${show.name}`} alt={`${show.name}`}/>\n                                </Link>\n                                <Link to={`/tvShows/${show.externals.tvrage}`}>\n                                <button className=\"addToList\">More Details</button>\n                                </Link>\n                                {/* <AddToListButton /> */}\n                                <Router>\n                                    <Route path=\"/tvShow/:tvShowID\" component={TvShowDetails}/>\n                                </Router>\n                            </div>\n                        )\n                    })}\n                </div>\n                <h2>TV Show Roulette!</h2>\n                <div className=\"showScroll\">\n                    {this.state.shuffleTV.map(show => {\n                        return (\n                            <div key={show.id} className=\"tvTitles\">\n                                <Link to={`/tvShows/${show.externals.tvrage}`}>\n                                <img src={`${show.image.medium}`} title={`${show.name}`} alt={`${show.name}`}/>\n                                </Link>\n                                <Link to={`/tvShows/${show.externals.tvrage}`}>\n                                <button className=\"addToList\">More Details</button>\n                                </Link>\n                                {/* <AddToListButton /> */}\n                                <Router>\n                                    <Route path=\"/tvShow/:tvShowID\" component={TvShowDetails}/>\n                                </Router>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\nexport default GeneralSearch;\n  ","import React, { Component } from \"react\";\n\n\nclass UpVote extends Component {\n    constructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcount: 0,\n\t\t};\n    }\n\n    handleClickUpVote = () => {\n\t    this.setState({\n            count: this.state.count + 1\n        }, () => {\n            const dataToBePushed = {\n                count: this.state.count,\n                name: this.props.showName\n            }\n            // this.props.objectArray(dataToBePushed);\n        })\n        \n\n        }\n        \n        render() {\n            return (\n                <li>\n\t\t\t\t\t<button onClick={this.handleClickUpVote}>Up Vote    </button>\n\t\t\t\t\t<img\n\t\t\t\t\tsrc={this.state.officialImage}\n\t\t\t\t\talt={`${this.props.showName}`}\n\t\t\t\t\t/>\n\t\t\t\t</li>\n            )\n        }\n\n\n}\n\n\n\n\n\n\n\nexport default UpVote;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport TvShowDetails from './TvShowDetails';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport AddToListButton from './AddToListButton'\nimport UpVote from \"./UpVote\";\n\nclass NewListPage extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttv: [],\n\t\t\tuserSearchQuery: '',\n\t\t\tuserInput: '',\n\t\t\tuserTV: [],\t\n\t\t\tsearchedShows: [],\n\t\t\tupVoteArray: [],\n\t\t};\n\t}\n\thandleChange = (e) => {\n\t\tthis.setState({userInput: e.target.value})\n\t}\n\thandleFormSubmit = (e) => {\n\t\te.preventDefault();\n\t\taxios.get(`https://api.tvmaze.com/search/shows?q=${this.state.userInput}`).then(response => {\n\t\t\tconst userTV = response.data;\n\t\t\tthis.setState({\n\t\t\t\tuserTV: userTV,\n\t\t\t})\n\t\t})\n\t}\n\tobjectArray = (objectToPush) => {\n\t\tconst stateToSet = [...this.state.upVoteArray];\n\t\tstateToSet.push(objectToPush);\n\t\tthis.setState({\n\t\t\tupVoteArray: stateToSet\n\t\t})\n\t\tconsole.log(this.state.upVoteArray)\n\t}\n\n\t\n\n\n\tcomponentDidMount() {\n\t}\n\t\n\trender() {\n\t\tconst hello = this.props.newListStateObj.shows\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"listPageTopFlex\">\n\t\t\t\t<div className=\"listPageFlex\">\n\t\t\t\t<h3>{this.props.newListStateObj.name}</h3>\n\t\t\t\t\t<h3>User's List Items</h3>\n\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t<form\n\t\t\t\t\tclassName=\"searchForm\"\n\t\t\t\t\taction=\"submit\"\n\t\t\t\t\tonSubmit={this.handleFormSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t<label htmlFor=\"listSearch\"></label>\n\t\t\t\t\t<input\n\t\t\t\t\tclassName=\"listSearchBar\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"listSearch\"\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tvalue={this.state.userInput}\n\t\t\t\t\tplaceholder=\"search for a show\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclassName=\"listButton\"\n\t\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-search\"></i>\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t\t</div>\t\t\n\t\t\t\t<div className=\"listVsChoicesFlex\">\n\t\t\t\t\t<div className=\"userList\">\n\t\t\t\t\t{hello !== undefined &&\n\t\t\t\t\t\t\t\t\t<ul>\n\n\t\t\t\t\t\t\t\t\t\t{hello.map(show => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<UpVote \n\t\t\t\t\t\t\t\t\t\t\t\tshowName={show.name}\n\t\t\t\t\t\t\t\t\t\t\t\tupVoteArray={this.state.upVoteArray}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t})} \n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"userOptions\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.userTV.map((show, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={index} className=\"searchResults\">\n\t\t\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t\t\t<Link to={`/tvShows/${show.show.externals.tvrage}`}>\n\t\t\t\t\t\t\t\t\t\t{show.show.image === null ? <p>No Image!</p> : <img src={show.show.image.medium} alt={`A poster of ${show.show.name}`} title={`An image of ${show.show.name}`}/>} \n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t\t\t<AddToListButton \n\t\t\t\t\t\t\t\t\t\tobjectArray={this.objectArray}\n\t\t\t\t\t\t\t\t\t\tshowName={show.show.name}\n\t\t\t\t\t\t\t\t\t\tshowId={show.show.id}\n\t\t\t\t\t\t\t\t\t\tnewListPage={this.props.newListPage}\n\t\t\t\t\t\t\t\t\t\tcurrentListObj={this.props.currentListObj}\n\n\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n    }\n}\n\nexport default NewListPage;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n\tBrowserRouter as Router,\n\tuseHistory,\n\tRoute,\n\tLink,\n\tNavLink,\n} from \"react-router-dom\";\nimport TvShowDetails from \"./TvShowDetails\";\nimport GeneralSearch from \"./GeneralSearch\";\nimport NewListPage from \"./NewListPage\";\n\n\nclass Nav extends Component {\n\tconstructor(){\n\tsuper();\n\tthis.state={\n\t\ttvShows:[],\n\t\tuserInput:'',\n\t\tlist: [],\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\t\t\t\n\t\t\t<div>\n\t\t\t\t<div tabIndex=\"0\">\n\t\t\t\t\t<Link to=\"/\" exact ><h1>TV PARTY</h1></Link>\n\t\t\t\t</div>\n\t\t\t\t<nav>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li tabIndex=\"0\">\n\t\t\t\t\t\t\t<Link to=\"/\">Home</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li tabIndex=\"0\">\n\t\t\t\t\t\t\t<Link to=\"/GeneralSearch/\">Catalogue</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/NewListPage/\">Your List</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t\t<Route path=\"/GeneralSearch/\" component={GeneralSearch} />\n\t\t\t\t<Route path=\"/NewListPage/\" render={() => (\n\t\t\t\t\t<NewListPage \n\t\t\t\t\t\tnewListStateObj={this.props.newListStateObj}\n\t\t\t\t\t\tnewListPage={this.props.newListPage}\n\t\t\t\t\t\tcurrentListObj={this.props.currentListObj}\n\t\t\t\t\t/>\n\t\t\t\t)} />\n\t\t\t</div>\n\t\t);\n\t}\n}  \n\nexport default Nav;","import React, { Component } from 'react';\r\n\r\nclass NewListFirebase extends Component {\r\n    componentDidMount() {\r\n        \r\n    }\r\n    render() {\r\n        return(\r\n            null\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewListFirebase","import React, { Component } from 'react';\nimport firebase from './firebase';\nimport TvShowDetails from './TvShowDetails';\nimport { BrowserRouter as Router, Route, Link, NavLink } from 'react-router-dom';\nimport AddListToFirebase from './AddListToFirebase'\nimport '../src/index.css'\nimport Nav from './Nav';\nimport NewListFirebase from './NewListFirebase';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      tvShows:[],\n      userInput:'',\n      list: [],\n      page: 1,\n      newListPage: '',\n      newListPageObj: '',\n      currentListObj: {}\n    }\n  }\n\n  addNewList = (userInput) => {\n    const newList = {\n        owner: '',\n        name: userInput,\n        shows: []\n    };\n\n    const dbRef = firebase.database().ref();\n    const listKey = dbRef.push(newList)\n    console.log('list key')\n    listKey.on('value', response => {\n      this.setState({\n        newListPageObj: response.val()\n      })\n    })\n    console.log(listKey.key)\n    this.setState({\n      newListPage: listKey.key,\n      currentListObj: newList,\n    })\n}\n  handleChange = (e) => {\n    this.setState({userInput:e.target.value})    \n}\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    const userInput = this.state.userInput\n    this.addNewList(userInput)\n};\n\n  componentDidMount() {\n    const dbRef = firebase.database().ref();\n    dbRef.on('value', response => {\n      const newState = [];\n      const newList = [];\n      const data = response.val();\n      for (let key in data) {\n        const listInfo = {\n          key: key,\n          info: data[key]\n        }\n        const keys = key\n        const listArray = data[key]\n        newState.push(listInfo)\n        newList.push(keys)\n        this.setState({\n          tvShows: newState,\n          list: newList\n        })\n      }\n    })\n  }\n\n\n  render() {\n    return (\n\t\t\t<Router basename=\"/tv-show-superlatives/\">\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t\t<Nav\n\t\t\t\t\t\t\tnewListStateObj={this.state.newListPageObj}\n\t\t\t\t\t\t\tnewListPage={this.state.newListPage}\n\t\t\t\t\t\t\tcurrentListObj={this.state.currentListObj}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route path=\"/tvShows/:tvShowsID\" component={TvShowDetails} />\n\t\t\t\t\t\t<Route path=\"newList/\" component={NewListFirebase} />\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t<AddListToFirebase\n\t\t\t\t\t\t\t\t\thandleFormSubmit={this.handleFormSubmit}\n\t\t\t\t\t\t\t\t\thandleClick={this.handleClick}\n\t\t\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\t\t\tuserInput={this.userInput}\n\t\t\t\t\t\t\t\t\ttvShows={this.state.tvShows}\n\t\t\t\t\t\t\t\t\tlist={this.state.list}\n\t\t\t\t\t\t\t\t\tnewListPage={this.state.newListPage}\n\t\t\t\t\t\t\t\t\taddTvShow={this.addTvShow}\n\t\t\t\t\t\t\t\t\taddNewList={this.addNewList}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"footerWrapper\">\n\t\t\t\t\t\t<footer>\n\t\t\t\t\t\t\t<p> &copy; 2020 Team Celeste, Lucas, Michael, and Blair</p>\n\t\t\t\t\t\t</footer>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}